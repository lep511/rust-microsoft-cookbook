AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Gemini-Medical 

Parameters:
  GeminiInputBucket:
    Type: String
    Description: The S3 bucket name where the medical data is stored.
  GeminiOutputBucket:
    Type: String
    Description: The S3 bucket name where the medical data is stored.
  GeminiApiKey:
    Type: String
    Description: The API key for the Gemini API.
  SecretManagerName:
    Type: String
    Description: The name of the secret in AWS Secrets Manager.
  MongoDbAtlasUrl:
    Type: String
    Description: The MongoDB Atlas URL.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 180
    MemorySize: 128
    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Resources:
  GeminiMedicalFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: rust-cargolambda # More info about Cargo Lambda: https://github.com/cargo-lambda/cargo-lambda
    Properties:
      CodeUri: ./rust_app   # Points to dir of Cargo.toml
      Handler: bootstrap    # Do not change, as this is the default executable name produced by Cargo Lambda
      Runtime: provided.al2023
      Architectures:
      - arm64
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref GeminiInputBucket
        - S3CrudPolicy:
            BucketName: !Ref GeminiOutputBucket
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretManagerName}-*'
      Environment:
        Variables:
          INPUT_BUCKET: !Ref GeminiInputBucket
          OUTPUT_BUCKET: !Ref GeminiOutputBucket
          GEMINI_API_KEY: !Ref GeminiApiKey
          SECRET_NAME: !Ref SecretManagerName
          MONGODB_ATLAS_URI: !Ref MongoDbAtlasUrl
      Events:
        Trigger:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - Object Created
              source:
                - aws.s3
              detail:
                bucket:
                  name:
                    - !Ref GeminiInputBucket
                object:
                  key:
                    - prefix: medical_data/
                    - suffix: .json
  
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LambdaGeminiMedicalFunction:
    Description: Gemini Medical Lambda Function ARN
    Value: !GetAtt GeminiMedicalFunction.Arn
